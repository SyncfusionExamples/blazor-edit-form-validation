@page "/"
@using Blazor_EditForm.Data
<h1>Employee Details Form</h1>

<EditForm Model="@employeeDetails" OnValidSubmit="@Submit">
    <DataAnnotationsValidator />
    <div class="form-row">
        <div class="form-group col-md-6">
            <label class="col-form-label">First Name :</label>
            <SfTextBox @bind-Value="@employeeDetails.FirstName"></SfTextBox>
            <ValidationMessage For="@(() => employeeDetails.FirstName)"></ValidationMessage>
        </div>
        <div class="form-group col-md-6">
            <label class="col-form-label">Last Name :</label>
            <SfTextBox @bind-Value="@employeeDetails.LastName"></SfTextBox>
            <ValidationMessage For="@(() => employeeDetails.LastName)"></ValidationMessage>
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-6">
            <label class="col-form-label">Email ID :</label>
            <SfTextBox @bind-Value="@employeeDetails.Email"></SfTextBox>
            <ValidationMessage For="@(() => employeeDetails.Email)"></ValidationMessage>
        </div>
        <div class="form-group col-md-6">
            <label class="col-form-label">Phone Number :</label>
            <SfTextBox @bind-Value="@employeeDetails.PhoneNumber"></SfTextBox>
            <ValidationMessage For="@(() => employeeDetails.PhoneNumber)"></ValidationMessage>
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6">
            <label class="col-form-label">Date Of Birth :</label>
            <SfDatePicker @bind-Value="@employeeDetails.DOB" Max=DateTime.Now></SfDatePicker>
            <ValidationMessage For="@(() => employeeDetails.DOB)"></ValidationMessage>
        </div>
        <div class="form-group col-md-6">
            <label class="col-form-label">Total Experience :</label>
            <SfNumericTextBox @bind-Value="@employeeDetails.TotalExperience"></SfNumericTextBox>
            <ValidationMessage For="@(() => employeeDetails.TotalExperience)"></ValidationMessage>
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-6">
            <label class="col-form-label">Address :</label>
            <SfTextBox Multiline=true @bind-Value="@employeeDetails.Address"></SfTextBox>
            <ValidationMessage For="@(() => employeeDetails.Address)"></ValidationMessage>
        </div>
        <div class="form-group col-md-3">
            <label class="col-form-label">Gender :</label>
            <div>
                <SfRadioButton Label="Male" Name="Gender" Value="male" @bind-Checked="@employeeDetails.Gender"></SfRadioButton>
                <SfRadioButton TChecked="string" Label="Female" Name="Gender" Value="female" @bind-Checked="@employeeDetails.Gender"></SfRadioButton>
            </div>
        </div>

    </div>
    <div class="form-row">
        <div class="form-group col-md-6">
            <label class="col-form-label">Country :</label>
            <SfComboBox TValue="string" TItem="Countries" @bind-Value="@employeeDetails.Country" DataSource="@countries">
                <ComboBoxFieldSettings Text="Name" Value="Code"></ComboBoxFieldSettings>
                <ComboBoxEvents TValue="string" TItem="Countries" ValueChange="ChangeCountry"></ComboBoxEvents>
            </SfComboBox>
            <ValidationMessage For="@(() => employeeDetails.Country)"></ValidationMessage>
        </div>
        <div class="form-group col-md-6">
            <label class="col-form-label">City :</label>
            <SfDropDownList Enabled="@enableCityDropDown" TValue="string" TItem="Cities" @bind-Value="@employeeDetails.City" Query="@CityQuery" DataSource="@cities">
                <DropDownListFieldSettings Text="Name" Value="Code"></DropDownListFieldSettings>
            </SfDropDownList>
            <ValidationMessage For="@(() => employeeDetails.City)"></ValidationMessage>
        </div>
    </div>
    <ValidationSummary />
    <div class="form-group">
        <SfButton Type="submit" IsPrimary=true>Save</SfButton>
        <SfButton Type="reset">Reset</SfButton>
    </div>
</EditForm>

@code{
    EmployeeDetails employeeDetails;
    List<EmployeeDetails> EmployeeList= new List<EmployeeDetails>();
    List<Countries> countries;
    List<Cities> cities;
    bool enableCityDropDown;
    public Query CityQuery { get; set; } = null;

    protected override void OnInitialized()
    {
        employeeDetails = new EmployeeDetails();
        countries = new Countries().GetCountries();
        cities = new Cities().GetCities();
    }
    public void ChangeCountry(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string,Countries> args)
    {
        this.enableCityDropDown = true;
        this.CityQuery = new Query().Where(new WhereFilter() { Field = "CountryCode", Operator = "equal", value = args.Value, IgnoreCase = false, IgnoreAccent = false });
        this.employeeDetails.City = null;
    }

    public void Submit()
    {
        EmployeeList.Add(employeeDetails);
    }
}